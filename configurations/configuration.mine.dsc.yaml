# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  configurationVersion: "0.2.0"
  assertions:
    - resource: Microsoft.Windows.Developer/OsVersion
      directives:
        description: Verify min OS version requirement
        allowPrerelease: true
      settings:
        MinVersion: '10.0.22000'
  resources:
    - resource: Microsoft.Windows.Developer/WindowsExplorer
      directives:
        description: Show File Extensions
        allowPrerelease: true
      settings:
        FileExtensions: Show  # Hide
        HiddenFiles: Show # Hide

    - resource: Microsoft.Windows.Developer/EnableDarkMode
      directives:
        Description: Set theme to Dark
        allowPrerelease: true
        settings:
           Ensure: Present
           RestartExplorer: true

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: PowerShell_Core
      directives:
        description: Install PowerShell
        allowPrerelease: true
      settings:
        id: Microsoft.Powershell
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Firefox
      directives:
        description: Install Firefox
        allowPrerelease: true
      settings:
        id: Mozilla.Firefox
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git
      directives:
        description: Install Git
        allowPrerelease: true 
      settings:
        id: Git.git
        source: winget

    - resource: GitDsc/GitConfigUserName
      directives:
       description: Configure Git
       allowPrerelease: true
      dependsOn:
       - Git
      settings:
        UserName: "Moaid Hathot"
        ConfigLocation: "Global"

    - resource: GitDsc/GitConfigUserEmail
      directives:
       description: Configure Git
       allowPrerelease: true
      dependsOn:
       - Git
      settings:
        UserEmail: "5457010+acangialosi@users.noreply.github.com"
        ConfigLocation: "Global"        

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Windows_Terminal_Preview
      directives:
        description: Install Windows Terminal Preview
        allowPrerelease: true
      settings:
        id: Microsoft.WindowsTerminal.Preview
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Ditto_Clipboard_Manager
      directives:
        description: Install Ditto
        allowPrerelease: true
      settings:
        id: Ditto.Ditto
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: LinqPad_8
      directives:
        description: Install LinqPad 8
        allowPrerelease: true
      settings:
        id: LINQPad.LINQPad.8
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: ILSpy
      directives:
        description: Install ILSpy
        allowPrerelease: true
      settings:
        id: icsharpcode.ILSpy
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: PowerToys
      directives:
        description: Install PowerToys
        allowPrerelease: true
      settings:
        id: Microsoft.PowerToys
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Visual_Studio_Code
      directives:
        description: Install Visual Studio Code
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudioCode
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Node.js
      directives:
        description: Install Node.js
        allowPrerelease: true
      settings:
        id: OpenJS.NodeJS
        # source: winget
#
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: bat
      directives:
        description: Install bat
        allowPrerelease: true
      settings:
        id: sharkdp.bat
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: k9s
      directives:
        description: Install k9s
        allowPrerelease: true
      settings:
        id: sharkdp.bat
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Glaze_Window_Tiling_Manager
      directives:
        description: Install GlazeWM
        allowPrerelease: true
      settings:
        id: glzr-io.glazewm
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Elgato_WaveLink
      directives:
        description: Install Elgato WaveLink
        allowPrerelease: true
      settings:
        id: Elgato.WaveLink
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Elgato_StreamDeck
      directives:
        description: Install Elgato StreamDeck
        allowPrerelease: true
      settings:
        id: Elgato.StreamDeck
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Elgato_Control_Center
      directives:
        description: Install Elgato Control Center
        allowPrerelease: true
      settings:
        id: Elgato.ControlCenter
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: WhatsApp
      directives:
        description: Install WhatsApp
        allowPrerelease: true
      settings:
        id: WhatsApp.WhatsApp
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Spotify
      directives:
        description: Install Spotify
        allowPrerelease: true
      settings:
        id: Spotify.Spotify
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Visual_Studio_2022
      directives:
        description: Install Visual Studio
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudio.2022.Enterprise
        source: winget

    - resource: PSDscResources/Environment
      id: Moaid_Config_Path
      directives:
        description: Setting Moaid_Config_Path to Repo
        allowPrerelease: false
      settings:
        name: Moaid_Config_Path
        value: '${WinGetConfigRoot}/../'

    - resource: PSDscResources/Environment
      id: YAZI_CONFIG_HOME
      directives:
        description: Setting Yazi's config to point to the config in the repo
        allowPrerelease: false
      settings:
        name: YAZI_CONFIG_HOME
        value: '${WinGetConfigRoot}/../config/yazi'

    - resource: PSDscResources/Script
      id: Update_PowerShell_Profile
      directives:
        description: Update PowerShells' Profile
      settings:
        SetScript: |
          '. ${WinGetConfigRoot}/../config/powershell/profile.ps1' > "$([System.Environment]::GetFolderPath('MyDocuments'))/PowerShell/Microsoft.PowerShell_profile.ps1"
        GetScript: return $false
        TestScript: return $false
